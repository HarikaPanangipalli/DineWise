name: Fullstack CI/CD

on:
  push:
    branches:
      - main

jobs:
  # Format Check for Backend Code
  format-check:
    name: fmt-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install dependencies for format check
        run: |
          python -m pip install --upgrade pip
          pip install black pytest
          
      - name: Check code formatting
        run: black --check ./backend

  # Build and Test Backend
  build-and-test-backend:
    runs-on: ubuntu-latest
    if: ${{ github.event.head_commit.message != 'skip-backend' }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Run Backend Tests
      #   working-directory: ./backend
      #   run: |
      #     pytest

  # Build Frontend
  build-frontend:
    runs-on: ubuntu-latest
    if: ${{ github.event.head_commit.message != 'skip-frontend' }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          npm install

  # Deploy Backend to Backend Server
  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-and-test-backend
    steps:
      - uses: actions/checkout@v2

      - name: Set up SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy Backend to Server
        env:
          BACKEND_SERVER: ${{ secrets.BACKEND_SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$BACKEND_SERVER <<EOF
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip
            cd ~/backend
            pip install -r requirements.txt
            nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          EOF

  # Deploy Frontend to Frontend Server
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - uses: actions/checkout@v2

      - name: Debug Variables
        run: |
          echo "FRONTEND_SERVER=$FRONTEND_SERVER_IP"
          echo "SERVER_USER=$SERVER_USER"
        env:
          FRONTEND_SERVER: ${{ secrets.FRONTEND_SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}

      - name: Set up SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy Frontend to Server
        env:
          FRONTEND_SERVER: ${{ secrets.FRONTEND_SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$FRONTEND_SERVER <<EOF
            sudo apt-get update
            sudo apt-get install -y nodejs npm
            cd ~/frontend
            npm install
            nohup npm run dev &
          EOF
